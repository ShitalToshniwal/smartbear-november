[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/NOV_ACTIONS.js",
    "content": "ï»¿///////////////////////////////////////////////\r\n// main app utilities\r\n//////////////////////////////////////////////\r\n/**\r\n * @ignore\r\n */\r\nconst NOV_UTILITIES = require(\"NOV_UTILITIES\");\r\n\r\n/**\r\n * NOV_ACTIONS - opens the application\r\n * @function\r\n * @author [CBU]\r\n * @param {boolean} [verify=true] - verifies that the app is open and visible\r\n * @param {boolean} [restart=true] - Restarts the app before attempting to open\r\n */\r\nfunction openNotePad(verify = true, restart = true) {\r\n  NOV_UTILITIES.indentLog(\"Opening Notepad\");\r\n  if(restart && Aliases.appNotead.WaitProperty(\"Exists\", true, 2000)) {\r\n    Aliases.appNotead.Terminate();\r\n  }\r\n  TestedApps.Items(0)\r\n    .Run();\r\n  // waits for up to ten seconds for the app to load\r\n  Aliases.appNotead.WaitProperty(\"Exists\", true, 10000)\r\n  if(verify) {\r\n    Log.Message(\"Verifying that Notepad is running and on screen\");\r\n    aqObject.CheckProperty(Aliases.appNotead, \"Exists\", cmpEqual, true);\r\n    aqObject.CheckProperty(Aliases.appNotead.mainWindow, \"Exists\", cmpEqual, true);\r\n    aqObject.CheckProperty(Aliases.appNotead.mainWindow, \"VisibleOnScreen\", cmpEqual, true);\r\n  }\r\n  NOV_UTILITIES.outdentLog();\r\n}\r\n\r\n/**\r\n * NOV_ACTIONS - closes the application\r\n * @function\r\n * @author [CBU]\r\n * @param {boolean} [verify=true] - verifies that the app is open and visible\r\n * @param {boolean} [click=true] - uses clicks to close notepad if true, otherwises uses keyboard shortcuts\r\n * @param {boolean} [bypassSaveDialog=true] - if true clicks don't save if the save dialog exists\r\n */\r\nfunction closeNotePad(verify = true, click = true, bypassSaveDialog = true) {\r\n  NOV_UTILITIES.indentLog(\"Closing Notepad\");\r\n  menuNavigation(\"exit\", click);\r\n  if(bypassSaveDialog && Aliases.appNotead.WaitProperty(\"Exists\", true, 2000)) {\r\n    if(Aliases.appNotead.saveDialog.WaitProperty(\"Exists\", true, 2000)) {\r\n      saveDialog(\"dontSave\", click);\r\n    }\r\n  }\r\n  // waits for up to ten seconds for the app to load  \r\n  if(verify) {\r\n    Log.Message(\"Verifying that Notepad closed gracefully.\");\r\n    aqObject.CheckProperty(Aliases.appNotead, \"Exists\", cmpEqual, false);\r\n  }\r\n  NOV_UTILITIES.outdentLog();\r\n}\r\n\r\n///////////////////////////////////////////////\r\n// navigation utilities\r\n//////////////////////////////////////////////\r\n\r\n/**\r\n * NOV_ACTIONS - Represents a navigation option for our application\r\n * @class\r\n * @author [CBU]\r\n */\r\nclass navOption {\r\n  /**\r\n   * @param {string} root - the root menu, File, Edit, etc...\r\n   * @param {string} option - the secondary option\r\n   * @param {string} [keys] - optional keyboard shortcut if the menu item supports it\r\n   */\r\n  constructor(root, option, keys) {\r\n    /**\r\n     * the root menu, File, Edit, etc...\r\n     * @type {string}\r\n     */\r\n    this.root = root;\r\n    /**\r\n     * the secondary option\r\n     * @type {string}\r\n     */\r\n    this.option = option;\r\n    /**\r\n     * optional keyboard shortcut if the menu item supports it\r\n     * @type {string}\r\n     */\r\n    this.keys = keys;\r\n    /**\r\n     * the full combined path of. root|path\r\n     * @type {string}\r\n     */\r\n    this.path = this.root + \"|\" + this.option;\r\n  }\r\n  /**\r\n   * Performs actions on the nav option\r\n   * @param {boolean} click - uses clicks to otherwises uses keyboard shortcuts\r\n   */\r\n  action(click) {\r\n    if(click === true) {\r\n      NOV_UTILITIES.indentLog(\"ACTION: Clicking Menu Path: \" + this.path);\r\n      Aliases.appNotead.mainWindow.MainMenu.Click(this.path);\r\n      NOV_UTILITIES.outdentLog();\r\n    } else {\r\n      NOV_UTILITIES.indentLog(\"ACTION: Keys: \" + this.keys);\r\n      if(this.keys !== undefined) {\r\n        Aliases.appNotead.mainWindow.Keys(this.keys);\r\n      } else {\r\n        Log.Error(\"Trying To Perform A Non Click Option Without Defined Keyboard Shortcuts\");\r\n      }\r\n      NOV_UTILITIES.outdentLog();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * NOV_ACTIONS - holds nav options created by {@link navOption}\r\n * @type {object}\r\n * @author [CBU]\r\n * @property {navOption} exit - nav option for exiting / closing notepad\r\n * @property {navOption} save - nav option for saving a file\r\n */\r\nconst navOptions = {\r\n  /**\r\n   * @type {navOption}\r\n   */\r\n  exit: new navOption(\"File\", \"Exit\"),\r\n  save: new navOption(\"File\", \"Save\")\r\n}\r\n\r\n/**\r\n * NOV_ACTIONS - performs various menu navigation options\r\n * @function\r\n * @author [CBU]\r\n * @param {string} option - which option to perform from {@link navOptions}\r\n * @param {boolean} click - uses clicks to otherwises uses keyboard shortcuts\r\n */\r\nfunction menuNavigation(option, click) {\r\n  NOV_UTILITIES.indentLog(\"Performing Menu Navigation: \" + option);\r\n  try {\r\n    navOptions[option].action(click);\r\n  } catch(err) {\r\n    Log.Error(\"FATAL: Error occured performing menu navigation. See additional information\", err.message + \"\\n\" + err.stack);\r\n  } finally {\r\n    NOV_UTILITIES.outdentLog();\r\n  }\r\n}\r\n\r\n/**\r\n * NOV_ACTIONS - inputs data from a test data object\r\n * @param {testData} data - the data to input / verify\r\n * @param {boolean} clear - if true clears the text first\r\n * @param {boolean} newLine - if true automatically enters a new line after each test data input\r\n * @param {boolean} verify - if true verifies the app accepts input properly\r\n * @return {testData} data - returns our test data with the expectedData property set (so we can keep passing this around)\r\n */\r\nfunction inputTestData(data, clear = true, newLine = true, verify = false) {\r\n  NOV_UTILITIES.indentLog(\"Inputing Test Data\");\r\n  try {\r\n    const editField = Aliases.appNotead.editField;\r\n    // we need to check the types of clear and new line so we can convert to boolean if it's a string passed in\r\n    // this will allow us to use the built in test complete data driven loop\r\n    if(typeof (clear) !== \"boolean\") {\r\n      clear = clear == \"true\";\r\n    }\r\n    if(typeof (clear) !== \"boolean\") {\r\n      newLine = newLine == \"true\";\r\n    }\r\n    var expectedText = \"\";\r\n    // check if we're clearing the text field, if not then we need to grab the current value for the expected text\r\n    if(!clear) {\r\n      expectedText += editField.wText;\r\n    } else {\r\n      Log.Message(\"Clearing The Text Field\");\r\n      editField.SetText(\"\");\r\n    }\r\n    for(var key in data.inputData) {\r\n      if(data.inputData[key] !== undefined) {\r\n        Log.Message(\"Keying: \" + data.inputData[key]);\r\n        editField.Keys(data.inputData[key]);\r\n        expectedText += data.inputData[key];\r\n        if(newLine) {\r\n          Log.Message(\"Pressing Enter\");\r\n          editField.Keys(\"[Enter]\");\r\n          // new line character\r\n          expectedText += \"\\r\\n\"\r\n        }\r\n      }\r\n    }\r\n    if(verify) {\r\n      Log.Message(\"Verify that the edit field matches input\");\r\n      aqObject.CheckProperty(editField, \"wText\", cmpEqual, expectedText);\r\n    }\r\n  } catch(err) {\r\n    Log.Error(\"FATAL: Error occured inputting data. See additional information\", err.message + \"\\n\" + err.stack);\r\n  } finally {\r\n    NOV_UTILITIES.outdentLog();\r\n    data.expectedResults = expectedText;\r\n    return data;\r\n  }\r\n}\r\n\r\n/**\r\n * NOV_ACTIONS - performs actions and verfies the save dialog existence \r\n * @function\r\n * @author [CBU]\r\n * @param {string} selectOption - which option to select, save, don'tsave or cancel\r\n * @param {boolean} [click=true] - uses clicks to otherwises uses keyboard shortcuts. only click is supported currently\r\n * @param {boolean} [verifyExists] - verfies the dialog actually exists\r\n */\r\nfunction saveDialog(selectOption, click = true, verifyExists) {\r\n  const dialog = Aliases.appNotead.saveDialog;\r\n  NOV_UTILITIES.indentLog(\"Selecting Save Dialog Option: \" + selectOption);\r\n  if(verifyExists) {\r\n    Log.Message(\"Verify Save Dialog Exists\");\r\n    aqObject.CheckProperty(dialog, \"Exists\", cmpEqual, true);\r\n    aqObject.CheckProperty(dialog, \"VisibleOnScreen\", cmpEqual, true);\r\n  }\r\n  switch(selectOption) {\r\n  case \"save\":\r\n    Log.Message(\"Clicking Save Button\");\r\n    dialog.btnSave.Click();\r\n    break;\r\n  case \"dontSave\":\r\n    Log.Message(\"Clicking Don't Save Button\");\r\n    dialog.btnDontSave.Click();\r\n    break;\r\n  case \"cancel\":\r\n    Log.Message(\"Clicking Cancel Button\");\r\n    dialog.btnCancel.Click();\r\n    break;\r\n  case \"none\":\r\n    Log.Message(\"No Action Performed\");\r\n    break;\r\n  }\r\n  NOV_UTILITIES.outdentLog();\r\n}\r\n\r\n/**\r\n * NOV_ACTIONS - saves the data we have inputed into a file\r\n * @function\r\n * @author [CBU]\r\n * @param {boolan} [nav=true] - if true handles the menu navigation for saving\r\n * @param {boolan} [newFile=true] - if assumes we aren't editing and resaving so we will have the dialog to save too\r\n * @param {testData} data - test data to save \r\n * @param {boolean} [click=true] - uses clicks to otherwises uses keyboard shortcuts. only click is supported currently\r\n * @param {boolean} [verify=true] - verfies the file is created after saving\r\n * @return {testData} data - returns our test data with the savedFile property set (so we can keep passing this around)\r\n */\r\nfunction saveToFile(nav = true, newFile = true, data, click = true, verify = true) {\r\n  const fullPath = Project.Path + \"testResults\\\\\";\r\n  const fullFilePath = fullPath + data.fileName;\r\n  NOV_UTILITIES.indentLog(\"Saving File To: \" + fullPath);\r\n  if(nav) {\r\n    menuNavigation(\"save\", click);\r\n  }  \r\n  // example of using findchild as opposed to name mapping\r\n  let pathField = Aliases.appNotead.saveDialog.FindChildEx(\"WndClass\",\"Edit\",10,true,10000);\r\n  pathField.SetText(fullFilePath);\r\n  saveDialog(\"save\",click);\r\n  data.fullFilePath = fullFilePath;\r\n  if(verify) {\r\n    Log.Message(\"Verify File Is Created On Save\");\r\n    aqFileSystem.Exists(data.fullFilePath) ?\r\n    Log.Checkpoint(data.fullFilePath + \" Was written to the file system\") :\r\n    Log.Error(data.fullFilePath + \" Was NOT written to the file system\")    \r\n  }\r\n  NOV_UTILITIES.outdentLog();\r\n  return data;\r\n}",
    "static": true,
    "longname": "src/NOV_ACTIONS.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "NOV_UTILITIES",
    "memberof": "src/NOV_ACTIONS.js",
    "static": true,
    "longname": "src/NOV_ACTIONS.js~NOV_UTILITIES",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "function",
    "name": "openNotePad",
    "memberof": "src/NOV_ACTIONS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_ACTIONS.js~openNotePad",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - opens the application",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "verify",
        "description": "verifies that the app is open and visible"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "restart",
        "description": "Restarts the app before attempting to open"
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "function",
    "name": "closeNotePad",
    "memberof": "src/NOV_ACTIONS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_ACTIONS.js~closeNotePad",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - closes the application",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "verify",
        "description": "verifies that the app is open and visible"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "click",
        "description": "uses clicks to close notepad if true, otherwises uses keyboard shortcuts"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "bypassSaveDialog",
        "description": "if true clicks don't save if the save dialog exists"
      }
    ]
  },
  {
    "__docId__": 4,
    "kind": "class",
    "name": "navOption",
    "memberof": "src/NOV_ACTIONS.js",
    "static": true,
    "longname": "src/NOV_ACTIONS.js~navOption",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - Represents a navigation option for our application",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 5,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/NOV_ACTIONS.js~navOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/NOV_ACTIONS.js~navOption#constructor",
    "access": null,
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": "the root menu, File, Edit, etc..."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "option",
        "description": "the secondary option"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "keys",
        "description": "optional keyboard shortcut if the menu item supports it"
      }
    ]
  },
  {
    "__docId__": 6,
    "kind": "member",
    "name": "root",
    "memberof": "src/NOV_ACTIONS.js~navOption",
    "static": false,
    "longname": "src/NOV_ACTIONS.js~navOption#root",
    "access": null,
    "description": "the root menu, File, Edit, etc...",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 7,
    "kind": "member",
    "name": "option",
    "memberof": "src/NOV_ACTIONS.js~navOption",
    "static": false,
    "longname": "src/NOV_ACTIONS.js~navOption#option",
    "access": null,
    "description": "the secondary option",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 8,
    "kind": "member",
    "name": "keys",
    "memberof": "src/NOV_ACTIONS.js~navOption",
    "static": false,
    "longname": "src/NOV_ACTIONS.js~navOption#keys",
    "access": null,
    "description": "optional keyboard shortcut if the menu item supports it",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "name": "path",
    "memberof": "src/NOV_ACTIONS.js~navOption",
    "static": false,
    "longname": "src/NOV_ACTIONS.js~navOption#path",
    "access": null,
    "description": "the full combined path of. root|path",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 10,
    "kind": "method",
    "name": "action",
    "memberof": "src/NOV_ACTIONS.js~navOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/NOV_ACTIONS.js~navOption#action",
    "access": null,
    "description": "Performs actions on the nav option",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "click",
        "description": "uses clicks to otherwises uses keyboard shortcuts"
      }
    ]
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "name": "navOptions",
    "memberof": "src/NOV_ACTIONS.js",
    "static": true,
    "longname": "src/NOV_ACTIONS.js~navOptions",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - holds nav options created by {@link navOption}",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "navOption"
        ],
        "spread": false,
        "optional": false,
        "name": "exit",
        "description": "nav option for exiting / closing notepad"
      },
      {
        "nullable": null,
        "types": [
          "navOption"
        ],
        "spread": false,
        "optional": false,
        "name": "save",
        "description": "nav option for saving a file"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12,
    "kind": "function",
    "name": "menuNavigation",
    "memberof": "src/NOV_ACTIONS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_ACTIONS.js~menuNavigation",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - performs various menu navigation options",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "option",
        "description": "which option to perform from {@link navOptions}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "click",
        "description": "uses clicks to otherwises uses keyboard shortcuts"
      }
    ]
  },
  {
    "__docId__": 13,
    "kind": "function",
    "name": "inputTestData",
    "memberof": "src/NOV_ACTIONS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_ACTIONS.js~inputTestData",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - inputs data from a test data object",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "testData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "the data to input / verify"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "clear",
        "description": "if true clears the text first"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "newLine",
        "description": "if true automatically enters a new line after each test data input"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "verify",
        "description": "if true verifies the app accepts input properly"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "testData"
      ],
      "spread": false,
      "description": "data - returns our test data with the expectedData property set (so we can keep passing this around)"
    }
  },
  {
    "__docId__": 14,
    "kind": "function",
    "name": "saveDialog",
    "memberof": "src/NOV_ACTIONS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_ACTIONS.js~saveDialog",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - performs actions and verfies the save dialog existence ",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selectOption",
        "description": "which option to select, save, don'tsave or cancel"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "click",
        "description": "uses clicks to otherwises uses keyboard shortcuts. only click is supported currently"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "verifyExists",
        "description": "verfies the dialog actually exists"
      }
    ]
  },
  {
    "__docId__": 15,
    "kind": "function",
    "name": "saveToFile",
    "memberof": "src/NOV_ACTIONS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_ACTIONS.js~saveToFile",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_ACTIONS.js",
    "importStyle": null,
    "description": "NOV_ACTIONS - saves the data we have inputed into a file",
    "lineNumber": 251,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolan"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "nav",
        "description": "if true handles the menu navigation for saving"
      },
      {
        "nullable": null,
        "types": [
          "boolan"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "newFile",
        "description": "if assumes we aren't editing and resaving so we will have the dialog to save too"
      },
      {
        "nullable": null,
        "types": [
          "testData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "test data to save"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "click",
        "description": "uses clicks to otherwises uses keyboard shortcuts. only click is supported currently"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "verify",
        "description": "verfies the file is created after saving"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "testData"
      ],
      "spread": false,
      "description": "data - returns our test data with the savedFile property set (so we can keep passing this around)"
    }
  },
  {
    "__docId__": 16,
    "kind": "file",
    "name": "src/NOV_DATA.js",
    "content": "ï»¿/**\r\n * @ignore\r\n */\r\nconst NOV_UTILITIES = require(\"NOV_UTILITIES\");\r\n\r\n/**\r\n * NOV_DATA - Hold test data types and they're queries\r\n * @type {object}\r\n * @author [CBU]\r\n * @property {string} person - \"select * from [nov$] where type = 'person'\"\r\n * @property {string} company - \"select * from [nov$] where type = 'product'\"\r\n * @property {string} product - \"select * from [nov$] where type = 'type'\"\r\n */\r\nconst testDataTypes = {\r\n  person: \"select * from [nov$] where type = 'person'\",\r\n  company: \"select * from [nov$] where type = 'company'\",\r\n  product: \"select * from [nov$] where type = 'product'\"\r\n}\r\n\r\n/**\r\n * NOV_DATA - Test data for use in other tests\r\n * @class\r\n * @author [CBU]\r\n */\r\nclass testData {\r\n  /**\r\n   * @param {string} firstName - the first name to type / verify\r\n   * @param {string} lastName - the last name to type / verify\r\n   * @param {string} message - the message to type / verify\r\n   * @param {string} fileName - the file name to save to\r\n   */\r\n  constructor(id, type, firstName, lastName, message, fileName) {\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.id = id;\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.type = type;\r\n    /**\r\n     * @type {object}\r\n     */\r\n    this.inputData = {\r\n      /**\r\n       * @type {string}\r\n       */\r\n      firstName: firstName == null ? \"\" : firstName,\r\n      /**\r\n       * @type {string}\r\n       */\r\n      lastName: lastName == null ? \"\" : lastName,\r\n      /**\r\n       * @type {string}\r\n       */\r\n      message: message == null ? \"\" : message\r\n    }\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.fileName = fileName;\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.expectedResult = \"\";\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.fullFilePath = \"\";\r\n  }\r\n}\r\n\r\n/**\r\n * NOV_DATA - Obtains test data of a specific type\r\n * @function \r\n * @author [CBU]\r\n * @param {string} type - {@link testDataTypes}\r\n * @return {testData} - data\r\n */\r\nfunction getTestData(type) {\r\n  NOV_UTILITIES.indentLog(\"Getting Test Data Type: \" + type);\r\n  var data;\r\n  let ControlCn = ADO.CreateADOConnection();\r\n  //create unique connection string with IMEX=1 to allow for mixed content columns\r\n  try {\r\n    ControlCn.ConnectionString = Project.Variables.APP_DATASOURCE;\r\n    ControlCn.LoginPrompt = false;\r\n    ControlCn.Open();\r\n    let sql = testDataTypes[type];\r\n    rs = ControlCn.Execute_(sql);\r\n    if(rs.BOF) {\r\n      Log.Error('No Data Avaliable');\r\n      data = new testData(\"\", \"\", \"\", \"\");\r\n    } else {\r\n      data = new testData(\r\n        rs.Fields.Item(0)\r\n        .Value,\r\n        rs.Fields.Item(1)\r\n        .Value,\r\n        rs.Fields.Item(2)\r\n        .Value,\r\n        rs.Fields.Item(3)\r\n        .Value,\r\n        rs.Fields.Item(4)\r\n        .Value,\r\n        rs.Fields.Item(5)\r\n        .Value,\r\n      );\r\n    }\r\n    NOV_UTILITIES.logObject(data, \"See additional information for the test data.\");\r\n    NOV_UTILITIES.logObject(data.inputData, \"See additional information for the test input data.\");\r\n  } catch(err) {\r\n    Log.Error(\"FATAL: Error occured getting test data. See additional information\", err.message + \"\\n\" + err.stack);\r\n  } finally {\r\n    NOV_UTILITIES.outdentLog();\r\n    return data;\r\n  }\r\n}\r\n\r\nfunction test() {\r\n  getTestData(\"person\")\r\n}",
    "static": true,
    "longname": "src/NOV_DATA.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "name": "NOV_UTILITIES",
    "memberof": "src/NOV_DATA.js",
    "static": true,
    "longname": "src/NOV_DATA.js~NOV_UTILITIES",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_DATA.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "name": "testDataTypes",
    "memberof": "src/NOV_DATA.js",
    "static": true,
    "longname": "src/NOV_DATA.js~testDataTypes",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_DATA.js",
    "importStyle": null,
    "description": "NOV_DATA - Hold test data types and they're queries",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "person",
        "description": "\"select * from [nov$] where type = 'person'\""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "company",
        "description": "\"select * from [nov$] where type = 'product'\""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "product",
        "description": "\"select * from [nov$] where type = 'type'\""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 19,
    "kind": "class",
    "name": "testData",
    "memberof": "src/NOV_DATA.js",
    "static": true,
    "longname": "src/NOV_DATA.js~testData",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_DATA.js",
    "importStyle": null,
    "description": "NOV_DATA - Test data for use in other tests",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 20,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/NOV_DATA.js~testData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/NOV_DATA.js~testData#constructor",
    "access": null,
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "firstName",
        "description": "the first name to type / verify"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastName",
        "description": "the last name to type / verify"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "the message to type / verify"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "the file name to save to"
      }
    ]
  },
  {
    "__docId__": 21,
    "kind": "member",
    "name": "id",
    "memberof": "src/NOV_DATA.js~testData",
    "static": false,
    "longname": "src/NOV_DATA.js~testData#id",
    "access": null,
    "description": "",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 22,
    "kind": "member",
    "name": "type",
    "memberof": "src/NOV_DATA.js~testData",
    "static": false,
    "longname": "src/NOV_DATA.js~testData#type",
    "access": null,
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 23,
    "kind": "member",
    "name": "inputData",
    "memberof": "src/NOV_DATA.js~testData",
    "static": false,
    "longname": "src/NOV_DATA.js~testData#inputData",
    "access": null,
    "description": "",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 24,
    "kind": "member",
    "name": "fileName",
    "memberof": "src/NOV_DATA.js~testData",
    "static": false,
    "longname": "src/NOV_DATA.js~testData#fileName",
    "access": null,
    "description": "",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 25,
    "kind": "member",
    "name": "expectedResult",
    "memberof": "src/NOV_DATA.js~testData",
    "static": false,
    "longname": "src/NOV_DATA.js~testData#expectedResult",
    "access": null,
    "description": "",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "fullFilePath",
    "memberof": "src/NOV_DATA.js~testData",
    "static": false,
    "longname": "src/NOV_DATA.js~testData#fullFilePath",
    "access": null,
    "description": "",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "function",
    "name": "getTestData",
    "memberof": "src/NOV_DATA.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_DATA.js~getTestData",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_DATA.js",
    "importStyle": null,
    "description": "NOV_DATA - Obtains test data of a specific type",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "{@link testDataTypes}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "testData"
      ],
      "spread": false,
      "description": "data"
    }
  },
  {
    "__docId__": 28,
    "kind": "function",
    "name": "test",
    "memberof": "src/NOV_DATA.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_DATA.js~test",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_DATA.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 29,
    "kind": "file",
    "name": "src/NOV_EVENTS.js",
    "content": "ï»¿/**\r\n * @ignore\r\n */\r\nconst NOV_UTILITIES = require(\"NOV_UTILITIES\");\r\n\r\n/**\r\n * we assume environment is not set every time tests are started.\r\n * This will allow us to set it again in the event we get an uncaught exception\r\n */\r\nvar environmentSet = false;\r\n\r\n/**\r\n * NOV_EVENTS - Handles the on start event of each test item\r\n * @function\r\n * @author [CBU]\r\n * @param {object} Sender - The Built In Test Complete sender object for the event handler\r\n */\r\nfunction startNotePadTest(Sender) {\r\n  NOV_UTILITIES.indentLog(\"Test Start\");\r\n  try {\r\n    if(!environmentSet) {\r\n      NOV_UTILITIES.setUpEnvironment();\r\n      // check if we have the file path we want\r\n      if(!aqFileSystem.Exists(Project.Path + \"testResults\\\\\")) {\r\n        aqFileSystem.CreateFolder(Project.Path + \"testResults\\\\\");\r\n      }\r\n    }\r\n  } catch(err) {\r\n    Log.Error(\"FATAL: Error occured starting the test. See additional information\", err.message + \"\\n\" + err.stack);\r\n  } finally {\r\n    NOV_UTILITIES.outdentLog();\r\n  }\r\n}\r\n\r\n/**\r\n * NOV_EVENTS - Handles the on stop event of each test item\r\n * @function\r\n * @author [CBU]\r\n * @param {object} Sender - The Built In Test Complete sender object for the event handler\r\n */\r\nfunction stopNotePadTest(Sender) {\r\n  NOV_UTILITIES.indentLog(\"Test Stop\");\r\n  // cleanup our files\r\n  if(aqFileSystem.Exists(Project.Path + \"testResults\\\\\")) {  \r\n    aqFileSystem.DeleteFolder(Project.Path + \"testResults\\\\\",true);    \r\n  }\r\n  NOV_UTILITIES.outdentLog();\r\n}\r\n\r\n/**\r\n * NOV_EVENTS - Handles the on error event\r\n * @function\r\n * @author [CBU]\r\n * @param {object} Sender - The Built In Test Complete sender object for the event handler\r\n * @param {object} LogParams - The Built In Test Complete log paramters object for attribute manipulation\r\n */\r\nfunction onLogError(Sender, LogParams) {\r\n\r\n}\r\n\r\nfunction onLogWarning(Sender, LogParams) {\r\n\r\n}\r\n\r\nfunction onLogMessage(Sender, LogParams) {\r\n\r\n}\r\n\r\nfunction onTimeout(Sender, Params) {\r\n\r\n}\r\n\r\nfunction onOverlappingWindow(Sender, Window, OverlappingWindow, LogParams) {\r\n\r\n}\r\n\r\nfunction onUnexpectedWindow(Sender, Window, LogParams) {\r\n\r\n}",
    "static": true,
    "longname": "src/NOV_EVENTS.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "name": "NOV_UTILITIES",
    "memberof": "src/NOV_EVENTS.js",
    "static": true,
    "longname": "src/NOV_EVENTS.js~NOV_UTILITIES",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "name": "environmentSet",
    "memberof": "src/NOV_EVENTS.js",
    "static": true,
    "longname": "src/NOV_EVENTS.js~environmentSet",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": "we assume environment is not set every time tests are started.\nThis will allow us to set it again in the event we get an uncaught exception",
    "lineNumber": 10,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "startNotePadTest",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~startNotePadTest",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": "NOV_EVENTS - Handles the on start event of each test item",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "Sender",
        "description": "The Built In Test Complete sender object for the event handler"
      }
    ]
  },
  {
    "__docId__": 33,
    "kind": "function",
    "name": "stopNotePadTest",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~stopNotePadTest",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": "NOV_EVENTS - Handles the on stop event of each test item",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "Sender",
        "description": "The Built In Test Complete sender object for the event handler"
      }
    ]
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "onLogError",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~onLogError",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": "NOV_EVENTS - Handles the on error event",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "Sender",
        "description": "The Built In Test Complete sender object for the event handler"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "LogParams",
        "description": "The Built In Test Complete log paramters object for attribute manipulation"
      }
    ]
  },
  {
    "__docId__": 35,
    "kind": "function",
    "name": "onLogWarning",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~onLogWarning",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "Sender",
        "types": [
          "*"
        ]
      },
      {
        "name": "LogParams",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 36,
    "kind": "function",
    "name": "onLogMessage",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~onLogMessage",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "Sender",
        "types": [
          "*"
        ]
      },
      {
        "name": "LogParams",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 37,
    "kind": "function",
    "name": "onTimeout",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~onTimeout",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "Sender",
        "types": [
          "*"
        ]
      },
      {
        "name": "Params",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "onOverlappingWindow",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~onOverlappingWindow",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "Sender",
        "types": [
          "*"
        ]
      },
      {
        "name": "Window",
        "types": [
          "*"
        ]
      },
      {
        "name": "OverlappingWindow",
        "types": [
          "*"
        ]
      },
      {
        "name": "LogParams",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 39,
    "kind": "function",
    "name": "onUnexpectedWindow",
    "memberof": "src/NOV_EVENTS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_EVENTS.js~onUnexpectedWindow",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_EVENTS.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "Sender",
        "types": [
          "*"
        ]
      },
      {
        "name": "Window",
        "types": [
          "*"
        ]
      },
      {
        "name": "LogParams",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 40,
    "kind": "file",
    "name": "src/NOV_UTILITIES.js",
    "content": "ï»¿///////////////////////////////////////////////\r\n// log utilities\r\n//////////////////////////////////////////////\r\n/**\r\n * location of the config path for our app\r\n * @type {object{\r\n * @property {string} test\r\n * @property {string} dev\r\n */\r\nconst configFilePaths = {\r\n  test : \"C:\\\\Users\\\\cunderwoo6\\\\Desktop\\\\NovemberWebinar\\\\Utilities\\\\NOV_ENV_TEST.JSON\",\r\n  dev : \"C:\\\\Users\\\\cunderwoo6\\\\Desktop\\\\NovemberWebinar\\\\Utilities\\\\NOV_ENV_DEV.JSON\"\r\n}  \r\n\r\n/**\r\n * NOV_UTILITIES - adds a new log folder and indents all further actions\r\n * @function\r\n * @author [CBU]\r\n * @param {string} sMessage -the message for the folder\r\n */\r\nfunction indentLog(sMessage) {\r\n  var oAttr;\r\n  oAttr = Log.CreateNewAttributes();\r\n  oAttr.Bold = true;\r\n  STEP_ID = Log.CreateFolder(sMessage, \"\", pmNormal, oAttr);\r\n  Log.PushLogFolder(STEP_ID);\r\n}\r\n\r\n/**\r\n * NOV_UTILITIES - Closes the last log indention\r\n * @function\r\n * @author [CBU]\r\n * @param {string} [sMessage=Finished] -the finished message\r\n */\r\nfunction outdentLog(sMessage) {\r\n  if(sMessage == undefined || sMessage == null) {\r\n    sMessage = \"Finished\";\r\n  }\r\n  Log.Message(sMessage);\r\n  Log.PopLogFolder();\r\n}\r\n\r\n/**\r\n * NOV_UTILITIES - Takes an object and logs all of its props and vals in an table\r\n * @function\r\n * @author [CBU]\r\n * @param {object} obj -the object you want to log info for\r\n * @param {string} [msg=See Additional Info For Object Details] - an optional message for the log\r\n */\r\nfunction logObject(obj, msg) {\r\n  var attr = Log.CreateNewAttributes(),\r\n    str = '<table style=\"width:75%;\"><tr><th>Property</th><th>Value</th></tr>';\r\n  attr.ExtendedMessageAsPlainText = false;\r\n  try {\r\n    for(var key in obj) {\r\n      str += '<tr><td>' + key + \"</td><td>\" + obj[key] + \"</td><tr>\";\r\n    }\r\n  } catch(err) {\r\n    Log.Message(err);\r\n  } finally {\r\n    str += '</table>'\r\n    if(!msg) {\r\n      Log.Message(\"See Additional Info For Object Details\", str, 300, attr);\r\n    } else {\r\n      Log.Message(msg, str, 300, attr);\r\n    }\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////\r\n// environment utilities\r\n//////////////////////////////////////////////\r\n/**\r\n * NOV_UTILITIES - Gets the environment we are currently running on\r\n * @function\r\n * @author [CBU]\r\n * @return {string} currEnv - the environemtn we are running on, if not specifed we assume test\r\n */\r\nfunction getEnv() {\r\n  indentLog(\"Getting Environment\");\r\n  let currEnv = \"\"\r\n  if(aqEnvironment.GetEnvironmentVariable(\"NOV_ENV\") == \"\") {\r\n    Log.Warning(\"No Envionrment Set. Assuming Test\");\r\n    dotNET.System.Environment.SetEnvironmentVariable_2(\"NOV_ENV\", \"test\", dotNET.System.EnvironmentVariableTarget.User);\r\n    currEnv = \"test\";\r\n  } else {\r\n    currEnv = aqEnvironment.GetEnvironmentVariable(\"NOV_ENV\");\r\n  }  \r\n  outdentLog(\"Current Environment: \" + currEnv);\r\n  return currEnv;\r\n}\r\n \r\n/**\r\n * NOV_UTILITIES - Sets up our environment to run tests\r\n * @function\r\n * @author [CBU]\r\n */\r\nfunction setUpEnvironment() {\r\n  indentLog(\"Setting Up The Environment\");\r\n  try {    \r\n    const configData = JSON.parse(aqFile.ReadWholeTextFile(configFilePaths[getEnv()],aqFile.ctUTF8));\r\n    logObject(configData, \"See additional information for config\");\r\n  \r\n    // check existance of project vars we need before setting them\r\n    if(!Project.Variables.VariableExists(\"APP_PATH\")) {\r\n      Project.Variables.AddVariable(\"APP_PATH\", \"String\");\r\n    }\r\n    if(!Project.Variables.VariableExists(\"APP_PROCESS\")) {\r\n      Project.Variables.AddVariable(\"APP_PROCESS\", \"String\");\r\n    }\r\n    if(!Project.Variables.VariableExists(\"APP_MAIN_WND_CLASS\")) {\r\n      Project.Variables.AddVariable(\"APP_MAIN_WND_CLASS\", \"String\");\r\n    }\r\n    if(!Project.Variables.VariableExists(\"APP_EDIT_WND_CLASS\")) {\r\n      Project.Variables.AddVariable(\"APP_EDIT_WND_CLASS\", \"String\");\r\n    }\r\n    if(!Project.Variables.VariableExists(\"APP_DATASOURCE\")) {\r\n      Project.Variables.AddVariable(\"APP_DATASOURCE\", \"String\");\r\n    }\r\n    // sets the path of the application for the tested app\r\n    TestedApps.Items(0).Path = configData.path;\r\n    TestedApps.Items(0).FileName = configData.file;\r\n\r\n    // sets project vars need to identify the application\r\n    Project.Variables.APP_PATH = configData.path;\r\n    Project.Variables.APP_PROCESS = configData.proccess;\r\n    Project.Variables.APP_MAIN_WND_CLASS = configData.mainWndClass;\r\n    Project.Variables.APP_EDIT_WND_CLASS = configData.mainEditClass;\r\n    Project.Variables.APP_DATASOURCE = configData.dataSource;\r\n  } catch(err) {\r\n    Log.Error(\"FATAL: Error occured setting the environment. See additional information\", err.message + \"\\n\" + err.stack);\r\n    outdentLog();  \r\n    \r\n  } finally {\r\n    outdentLog();    \r\n  }  \r\n}\r\n\r\nmodule.exports.indentLog = indentLog;\r\nmodule.exports.outdentLog = outdentLog;\r\nmodule.exports.logObject = logObject;\r\nmodule.exports.setUpEnvironment = setUpEnvironment;",
    "static": true,
    "longname": "src/NOV_UTILITIES.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 41,
    "kind": "variable",
    "name": "configFilePaths",
    "memberof": "src/NOV_UTILITIES.js",
    "static": true,
    "longname": "src/NOV_UTILITIES.js~configFilePaths",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_UTILITIES.js",
    "importStyle": null,
    "description": "location of the config path for our app",
    "lineNumber": 10,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dev",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 42,
    "kind": "function",
    "name": "indentLog",
    "memberof": "src/NOV_UTILITIES.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_UTILITIES.js~indentLog",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_UTILITIES.js",
    "importStyle": null,
    "description": "NOV_UTILITIES - adds a new log folder and indents all further actions",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sMessage",
        "description": "the message for the folder"
      }
    ]
  },
  {
    "__docId__": 43,
    "kind": "function",
    "name": "outdentLog",
    "memberof": "src/NOV_UTILITIES.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_UTILITIES.js~outdentLog",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_UTILITIES.js",
    "importStyle": null,
    "description": "NOV_UTILITIES - Closes the last log indention",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Finished",
        "defaultRaw": "Finished",
        "name": "sMessage",
        "description": "the finished message"
      }
    ]
  },
  {
    "__docId__": 44,
    "kind": "function",
    "name": "logObject",
    "memberof": "src/NOV_UTILITIES.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_UTILITIES.js~logObject",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_UTILITIES.js",
    "importStyle": null,
    "description": "NOV_UTILITIES - Takes an object and logs all of its props and vals in an table",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the object you want to log info for"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "See Additional Info For Object Details",
        "defaultRaw": "See Additional Info For Object Details",
        "name": "msg",
        "description": "an optional message for the log"
      }
    ]
  },
  {
    "__docId__": 45,
    "kind": "function",
    "name": "getEnv",
    "memberof": "src/NOV_UTILITIES.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_UTILITIES.js~getEnv",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_UTILITIES.js",
    "importStyle": null,
    "description": "NOV_UTILITIES - Gets the environment we are currently running on",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "currEnv - the environemtn we are running on, if not specifed we assume test"
    }
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "setUpEnvironment",
    "memberof": "src/NOV_UTILITIES.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NOV_UTILITIES.js~setUpEnvironment",
    "access": null,
    "export": false,
    "importPath": "./src/NOV_UTILITIES.js",
    "importStyle": null,
    "description": "NOV_UTILITIES - Sets up our environment to run tests",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "[CBU]"
      }
    ],
    "params": []
  },
  {
    "__docId__": 47,
    "kind": "file",
    "name": "src/NOV_VERIFICATIONS.js",
    "content": "ï»¿",
    "static": true,
    "longname": "src/NOV_VERIFICATIONS.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]